apiVersion: v1
kind: ConfigMap
metadata:
  name:  api-config
  namespace: app-dev
data:
  api-env: dev
---
apiVersion: v1
kind: Secret
metadata:
  name: registry-pull-secret
  namespace: app-dev
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJyZWdpc3RyeS5jbi1zaGFuZ2hhaS5hbGl5dW5jcy5jb20iOiB7CgkJCSJhdXRoIjogImRHRnZhWE4wYlc5dWEwQXhOak11WTI5dE9sWjNkalUyZEhrMyIKCQl9Cgl9Cn0=
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name:  api-pvc
  namespace: app-dev
spec:
  storageClassName: rook-cephfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20G
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  api
  namespace: app-dev
  labels:
    app:  api
spec:
  selector:
    matchLabels:
      app:  api
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  api
    spec:
      imagePullSecrets: 
        - name: registry-pull-secret
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - api
              topologyKey: kubernetes.io/hostname
      containers:
        - name:  api
          image: registry.cn-shanghai.aliyuncs.com/jyjt/develop-api:202112040405
          imagePullPolicy: IfNotPresent
          args: ["--spring.profiles.active=$(api-env-key)"]
          ports:
          - containerPort: 8081 
          env:
          - name: api-env-key
            valueFrom:
              configMapKeyRef:
                name:  api-config
                key: api-env 
          resources:
            limits:
              cpu: "4"
              memory: "4Gi"
            requests:
              cpu: "3"
              memory: "3Gi" 
          volumeMounts: 
            - name: nfs
              mountPath: /logs
      volumes:
        - name: nfs
          persistentVolumeClaim:
            claimName:  api-pvc
