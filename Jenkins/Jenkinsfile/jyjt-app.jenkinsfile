#!groovy
def createVersion() {
  return new Date().format('yyyyMMddHHmm')
}


def road = [
  "api": "juneyaoYun",
  "web": "juneyaoYun",
  "vue": "group-app-manage",
  "redbag": "redBag",
  "meet": "meet"
]

def projectName

pipeline {
    agent any

    parameters {
        choice(name: 'branch', choices: ['develop', 'master'], description: 'select the branch')
        choice(name: 'app', choices: ['api', 'web', 'vue','redbag','meet'], description: 'select the app')
    }

    environment {
        def tag = createVersion()
        def repositry = "registry.cn-shanghai.aliyuncs.com/jyjt/${params.branch}-${params.app}"
    }

    stages {         
        
        stage ('git pull') {
            steps { 
                script {
                    projectName = road."${params.app}"
                    sh """
                        cd $WORKSPACE/$projectName
                        git reset --hard HEAD
                        git switch ${params.branch}
                        git fetch --all
                        git reset --hard origin/${params.branch}
                        git pull origin ${params.branch}
                    """
                }              
                
            }
        }
        
        stage('compile') {
            steps {
                sh """
                    if [[ ${params.app} == "api" || ${params.app} == "web" ]] ;then
                        cd $WORKSPACE/juneyaoYun
                        /usr/local/apache-maven-3.8.4/bin/mvn clean install
                    elif [[ ${params.app} == "vue" || ${params.app} == "redbag" || ${params.app} == "meet" ]] ;then
                        echo "vue don't need compile"
                    fi                  
                """
            }
        }

        stage ('operation by docker') {
            steps{
                script {
                    sh """
                        if [[ ${params.app} == "api" || ${params.app} == "web" ]] ;then
                            cd $WORKSPACE/juneyaoYun/juneyaoYun-${params.app}
                        elif [ ${params.app} == "vue" ];then
                            cd $WORKSPACE/group-app-manage
                        elif [ ${params.app} == "redbag" ];then
                            cd $WORKSPACE/redBag
                        elif [ ${params.app} == "meet" ];then
                            cd $WORKSPACE/meet
                        fi     
                        
                        docker build -t ${repositry}:${tag} .
                        docker push ${repositry}:${tag}
                        docker rmi -f ${repositry}:${tag}
                    """
                }                
            }
        }
        stage ('kubernetes update apps') {
            steps{
                sh """
                 if [ "${params.branch}" == "develop" ];then {
                    ssh root@192.168.177.90 "kubectl set image deployment/${params.app} ${params.app}=${repositry}:${tag} -n app-dev"
                    }
                 elif [ "${params.branch}" == "master" ];then {
                    ssh root@103.192.254.15 -p 30022 "kubectl set image deployment/${params.app} ${params.app}=${repositry}:${tag} -n app-prod"
                    }
                 fi
                """
            }
        }
    }
}

