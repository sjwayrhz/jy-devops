#!groovy
@Library('Jenkinslib') _     
def mytools = new org.devops.tools()

def road = [
  "api": "juneyaoYun",
  "web": "juneyaoYun",
  "vue": "group-app-manage"
]

def warehouse

pipeline {
    agent any

    parameters {
        choice(name: 'branch', choices: ['develop', 'master', 'office'], description: 'select the branch')
        choice(name: 'app', choices: ['api', 'web', 'vue'], description: 'select the app')
    }

    environment {
        def tag = createVersion()
        def repositry = "registry.cn-shanghai.aliyuncs.com/jyjt/${params.branch}-${params.app}"
    }

    stages {         
        
         stage ('set warehouse') {
            steps { 
                echo road.api
                script {
                    warehouse = "${WORKSPACE}"/road."${params.app}"
                    sh """
                        cd $warehouse
                        git reset --hard HEAD
                        git switch ${params.branch}
                        git fetch --all
                        git reset --hard origin/${params.branch}
                        git pull origin ${params.branch}
                    """
                }              
                
            }
        }
        
        stage('compile') {
            steps {
                sh """
                    if [[ ${params.app} == "api" || ${params.app} == "web" ]] ;then
                        cd $WORKSPACE/juneyaoYun
                        /usr/local/apache-maven-3.8.1/bin/mvn clean install
                    elif [ ${params.app} == "vue" ];then
                        echo "vue don't need compile"
                    fi                  
                """
            }
        }

        stage ('copy jar files') {
            steps {
                sh """
                    if [[ ${params.app} == "api" || ${params.app} == "web" ]] ;then
                        cp -fr $WORKSPACE/juneyaoYun/juneyaoYun-${params.app}/target/juneyaoYun-${params.app}-0.0.1-SNAPSHOT.jar $WORKSPACE/juneyaoYun/juneyaoYun-${params.app}/to-docker-${params.app}/
                    elif [ ${params.app} == "vue" ];then
                        echo "vue don't need copy files"
                    fi     
                """
            }
        }

        stage ('operation by docker') {
            steps{
                sh """
                    if [[ ${params.app} == "api" || ${params.app} == "web" ]] ;then
                        cd $WORKSPACE/juneyaoYun/juneyaoYun-${params.app}/to-docker-${params.app}
                    elif [ ${params.app} == "vue" ];then
                        cd $WORKSPACE/group-app-manage
                    fi     
                    
                    docker build -t ${repositry}:${tag} .
                    docker push ${repositry}:${tag}
                    docker rmi -f ${repositry}:${tag}
                """
            }
        }
        stage ('kubernetes update apps') {
            steps{
                sh """
                 if [ "${params.branch}" == "office" ];then {
                        echo "office"
                    }
                 elif [ "${params.branch}" == "develop" ];then {
                    ssh 192.168.177.45 "kubectl set image deployment/${params.app} ${params.app}=${repositry}:${tag} -n app-dev"
                    }
                 elif [ "${params.branch}" == "master" ];then {
                    ssh 192.168.177.45 "kubectl set image deployment/${params.app} ${params.app}=${repositry}:${tag} -n app-prod"
                    }
                 fi
                """
            }
        }
    }
}
